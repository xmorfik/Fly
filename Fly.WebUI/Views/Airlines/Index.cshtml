@using Fly.Core.Entities;
@using Microsoft.AspNetCore.Mvc.Localization;
@model AirlinesViewModel;
@inject IViewLocalizer Localizer

<div class="card text-center mx-auto" style="width:1000px">
    <img class="card-img-top" src="~/airline.jpg">
    <div class="card-body">
        <form asp-action="Index">
            <div class="row">
                <div class="col">
                    <label  class="control-label">Name</label>
                    <input asp-for="AirlineParameter.Name" class="form-control" />
                </div

                @Html.HiddenFor(x=>x.RedirectUri)
                @Html.HiddenFor(x=>x.IsSelect)

                <div class="col">
                    <label> OrderBy </label>
                    @Html.DropDownListFor(x => x.AirlineParameter.OrderBy, 
                        new List<SelectListItem>
                            {
                                new SelectListItem{ Value = "Name", Text= "Name"},
                                new SelectListItem{ Value = "RegistrationAddress", Text= "RegistrationAddress"},
                                new SelectListItem{ Value = "Phone", Text= "Phone"}
                    }, new { @class = "form-select"} )
                </div>

                <div class="col"> 
                    <br />
                    <label> Descresing </label>
                    @Html.CheckBoxFor(x=>x.AirlineParameter.Descresing)
                </div>
               
                <br />
                <div class="col">
                    <br />
                    <input type="submit" onclick="setStartPage()" value=@Localizer["Search"] class="btn btn-primary" />
                </div>

                <br />
                <div class="card-body">
                    @if (User.IsInRole("Administrator"))
                    {
                        @Html.ActionLink("Create", "Create")
                    }
                    <table class="table rounded rounded-6 overflow-hidden table-sm table-dark table-hover">
                        <thead>
                            <tr>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Phone
                                </th>
                                <th>
                                    RegistrationAddress
                                </th>
                                <th>
                                    Id
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.PagedResponse)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Phone)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RegistrationAddress)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                        @if (Model.IsSelect)
                                        {
                                            @Html.ActionLink("Select","Select", new { id = item.Id, redirectUri = Model.RedirectUri})
                                        }
                                        else
                                        {
                                            @if (User.IsInRole("Administrator"))
                                            {
                                                @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                                                <br />
                                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                            }
                                        }
                                        @Html.ActionLink("Details", "Details", new { id=item.Id })
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                
                <div class="col">
                    <input asp-for="MetaData.PageSize" min="1" value="@Model.MetaData.PageSize" class="form-control" />
                </div>
                <div class="col">
                    <input hidden="true" asp-for="MetaData.CurrentPage" value="@Model.MetaData.CurrentPage" id="pageNumber" class="form-control" />
                </div>
                @if (Model.MetaData.HasPrevious)
            {
                <div class="col">
                        <input type="submit" value="Prev" onclick="decrementValue()" class="btn btn-outline-primary" />
                    </div>
            }
                @if (Model.MetaData.HasNext)
            {
                <div class="col">
                        <input type="submit" value="Next" onclick="incrementValue()" class="btn btn-outline-primary" />
                    </div>
            }
            </div>
        </form>
    </div>
</div>

<script>
    function incrementValue() {
        var value = parseInt(document.getElementById('pageNumber').value, 10);
        value++;
        document.getElementById('pageNumber').value = value;
    }

    function decrementValue() {
        var value = parseInt(document.getElementById('pageNumber').value, 10);
        value--;
        document.getElementById('pageNumber').value = value;
    }

    function setStartPage() {
        document.getElementById('pageNumber').value = 1;
    }
</script>
