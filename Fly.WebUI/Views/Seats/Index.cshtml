@using Fly.Core.Entities;
@using Microsoft.AspNetCore.Mvc.Localization;
@model SeatsViewModel;
@inject IViewLocalizer Localizer

<div class="card text-center mx-auto" style="width:1000px">
    <img class="card-img-top" src="~/seat.jpg">
    <div class="card-body">
        <form asp-action="Index">
            <div class="row">
                <div class="col">
                    <br />
                    <input type="submit" onclick="setStartPage()" value=@Localizer["Search"] class="btn btn-primary" />
                </div>
                <br />
                <div class="card-body">
                    @if (User.IsInRole("Administrator"))
                    {
                        @Html.ActionLink("Create", "Create")
                    }
                    <table class="table rounded rounded-6 overflow-hidden table-sm table-dark table-hover">
                        <thead>
                            <tr>
                                <th>
                                    Row
                                </th>
                                <th>
                                    Column
                                </th>
                                <th>
                                    Seat Class
                                </th>
                                <th>
                                    Aircraft
                                </th>
                                <th>
                                    Tikets Count
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.PagedResponse)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Row)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Column)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.SeatClass)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Aircraft.ModelType)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Tickets.Count)
                                    </td>
                                    <td>
                                        @if (User.IsInRole("Administrator"))
                                        {
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                                            <br />
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                        }
                                        @Html.ActionLink("Details", "Details", new { id=item.Id })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="col">
                    <input asp-for="MetaData.PageSize" min="1" value="@Model.MetaData.PageSize" class="form-control" />
                </div>
                <div class="col">
                    <input hidden="true" asp-for="MetaData.CurrentPage" value="@Model.MetaData.CurrentPage" id="pageNumber" class="form-control" />
                </div>
                @if (Model.MetaData.HasPrevious)
                {
                    <div class="col">
                        <input type="submit" value="Prev" onclick="decrementValue()" class="btn btn-outline-primary" />
                    </div>
                }
                @if (Model.MetaData.HasNext)
                {
                    <div class="col">
                        <input type="submit" value="Next" onclick="incrementValue()" class="btn btn-outline-primary" />
                    </div>
                }
            </div>
        </form>
    </div>
</div>

<script>
    function incrementValue() {
        var value = parseInt(document.getElementById('pageNumber').value, 10);
        value++;
        document.getElementById('pageNumber').value = value;
    }

    function decrementValue() {
        var value = parseInt(document.getElementById('pageNumber').value, 10);
        value--;
        document.getElementById('pageNumber').value = value;
    }

    function setStartPage() {
        document.getElementById('pageNumber').value = 1;
    }
</script>
