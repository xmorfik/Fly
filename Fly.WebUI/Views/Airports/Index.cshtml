@using Fly.Core.Entities;
@using Microsoft.AspNetCore.Mvc.Localization;
@model AirportsViewModel;
@inject IViewLocalizer Localizer

<div class="card">
    <img class="card-img-top" src="~/airport.jpg">
    <div class="card-body">
        <form asp-action="Index">
            <div class="row">
                <div class="col">
                    <label class="control-label">Name</label>
                    <input asp-for="AirportParameter.Name" class="form-control" />
                </div>
                <div class="col">
                    <label class="control-label">City Name</label>
                    <input asp-for="AirportParameter.CityName" class="form-control" />
                </div>
                <div class="col">
                    <label class="control-label">Iso Country</label>
                    <input asp-for="AirportParameter.IsoCountry" class="form-control" />
                </div>
                <div class="col">
                    <label class="control-label">Iso Region</label>
                    <input asp-for="AirportParameter.IsoRegion" class="form-control" />
                </div>
                <div class="col">
                    <br />
                    <input type="submit" onclick="setStartPage()" value=@Localizer["Search"] class="btn btn-primary" />
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                AirportId
                            </th>
                            <th>
                                Longitude
                            </th>
                            <th>
                                Latitude
                            </th>
                            <th>
                                Altitude
                            </th>
                            <th>
                                City Name
                            </th>
                            <th>
                                Counrty
                            </th>
                            <th>
                                Region
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.PagedResponse)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AirportId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Longitude)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Latitude)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Altitude)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.City.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.City.IsoCountry)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.City.IsoRegion)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                                    @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id=item.Id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="col">
                    <input asp-for="MetaData.PageSize" min="1" value="@Model.MetaData.PageSize" class="form-control" />
                </div>
                <div class="col">
                    <input hidden="true" asp-for="MetaData.CurrentPage" value="@Model.MetaData.CurrentPage" id="pageNumber" class="form-control" />
                </div>
                @if (Model.MetaData.HasPrevious)
                {
                    <div class="col">
                        <input type="submit" value="Prev" onclick="decrementValue()" class="btn btn-outline-primary" />
                    </div>
                }
                @if (Model.MetaData.HasNext)
                {
                    <div class="col">
                        <input type="submit" value="Next" onclick="incrementValue()" class="btn btn-outline-primary" />
                    </div>
                }
            </div>
        </form>
    </div>
</div>

<script>
    function incrementValue() {
        var value = parseInt(document.getElementById('pageNumber').value, 10);
        value++;
        document.getElementById('pageNumber').value = value;
    }

    function decrementValue() {
        var value = parseInt(document.getElementById('pageNumber').value, 10);
        value--;
        document.getElementById('pageNumber').value = value;
    }

    function setStartPage() {
        document.getElementById('pageNumber').value = 1;
    }
</script>